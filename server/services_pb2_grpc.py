# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import services_pb2 as services__pb2


class SayHelloServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Compute = channel.unary_unary(
        '/pb.SayHelloService/Compute',
        request_serializer=services__pb2.SayHiRequest.SerializeToString,
        response_deserializer=services__pb2.SayHelloResponse.FromString,
        )


class SayHelloServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Compute(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SayHelloServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Compute': grpc.unary_unary_rpc_method_handler(
          servicer.Compute,
          request_deserializer=services__pb2.SayHiRequest.FromString,
          response_serializer=services__pb2.SayHelloResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pb.SayHelloService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class SayByeServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Compute = channel.unary_unary(
        '/pb.SayByeService/Compute',
        request_serializer=services__pb2.SayHiRequest.SerializeToString,
        response_deserializer=services__pb2.SayByeResponse.FromString,
        )


class SayByeServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Compute(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SayByeServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Compute': grpc.unary_unary_rpc_method_handler(
          servicer.Compute,
          request_deserializer=services__pb2.SayHiRequest.FromString,
          response_serializer=services__pb2.SayByeResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pb.SayByeService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
